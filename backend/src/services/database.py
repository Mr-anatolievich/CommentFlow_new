from sqlalchemy.ext.asyncio import create_async_engine, AsyncSession, async_sessionmaker
from sqlalchemy.orm import declarative_base
import os
from typing import AsyncGenerator

# –û—Ç—Ä–∏–º–∞–Ω–Ω—è URL –±–∞–∑–∏ –¥–∞–Ω–∏—Ö –∑ –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
DATABASE_URL = os.getenv("DATABASE_URL", "sqlite+aiosqlite:///./automation.db")

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –¥–≤–∏–≥—É–Ω–∞
if DATABASE_URL.startswith("sqlite"):
    # SQLite configuration
    engine = create_async_engine(
        DATABASE_URL,
        echo=True,  # –õ–æ–≥—É–≤–∞–Ω–Ω—è SQL –∑–∞–ø–∏—Ç—ñ–≤ (–≤–∏–º–∫–Ω—É—Ç–∏ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—ñ)
        connect_args={"check_same_thread": False}
    )
else:
    # PostgreSQL configuration
    engine = create_async_engine(
        DATABASE_URL,
        echo=True,  # –õ–æ–≥—É–≤–∞–Ω–Ω—è SQL –∑–∞–ø–∏—Ç—ñ–≤ (–≤–∏–º–∫–Ω—É—Ç–∏ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—ñ)
        pool_size=20,
        max_overflow=0,
        pool_pre_ping=True,
        pool_recycle=300,
    )

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ñ–∞–±—Ä–∏–∫–∏ —Å–µ—Å—ñ–π
AsyncSessionLocal = async_sessionmaker(
    engine,
    class_=AsyncSession,
    expire_on_commit=False
)

# –ë–∞–∑–æ–≤–∏–π –∫–ª–∞—Å –¥–ª—è –º–æ–¥–µ–ª–µ–π
Base = declarative_base()

async def get_db_session() -> AsyncGenerator[AsyncSession, None]:
    """–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–µ—Å—ñ–π –±–∞–∑–∏ –¥–∞–Ω–∏—Ö –¥–ª—è FastAPI Dependency Injection"""
    async with AsyncSessionLocal() as session:
        try:
            yield session
        except Exception:
            await session.rollback()
            raise
        finally:
            await session.close()

async def init_database():
    """–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö"""
    from src.models.database import Base
    
    async with engine.begin() as conn:
        # –°—Ç–≤–æ—Ä–∏—Ç–∏ –≤—Å—ñ —Ç–∞–±–ª–∏—Ü—ñ
        await conn.run_sync(Base.metadata.create_all)
        print("‚úÖ –¢–∞–±–ª–∏—Ü—ñ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö —Å—Ç–≤–æ—Ä–µ–Ω–æ")

async def close_database():
    """–ó–∞–∫—Ä–∏—Ç—Ç—è –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ –±–∞–∑–æ—é –¥–∞–Ω–∏—Ö"""
    await engine.dispose()
    print("üîå –ó'—î–¥–Ω–∞–Ω–Ω—è –∑ –±–∞–∑–æ—é –¥–∞–Ω–∏—Ö –∑–∞–∫—Ä–∏—Ç–æ")