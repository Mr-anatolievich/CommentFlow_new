from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
from contextlib import asynccontextmanager
import os
from dotenv import load_dotenv

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
load_dotenv()

# –Ü–º–ø–æ—Ä—Ç–∏ –ª–æ–∫–∞–ª—å–Ω–∏—Ö –º–æ–¥—É–ª—ñ–≤
from src.services.database import engine
from src.models.database import Base

@asynccontextmanager
async def lifespan(app: FastAPI):
    """Lifecycle events –¥–ª—è –¥–æ–¥–∞—Ç–∫—É"""
    # Startup
    print("üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞...")
    
    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—å –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
    async with engine.begin() as conn:
        await conn.run_sync(Base.metadata.create_all)
    
    print("‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!")
    
    yield
    
    # Shutdown
    print("üõë –ó—É–ø–∏–Ω–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...")
    await engine.dispose()
    print("‚úÖ –°–µ—Ä–≤–µ—Ä –∑—É–ø–∏–Ω–µ–Ω–æ!")

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–æ–¥–∞—Ç–∫—É
app = FastAPI(
    title="CommentFlow API",
    description="API –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—ó –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤ –≤ —Å–æ—Ü—ñ–∞–ª—å–Ω–∏—Ö –º–µ—Ä–µ–∂–∞—Ö",
    version="1.0.0",
    lifespan=lifespan
)

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è CORS
app.add_middleware(
    CORSMiddleware,
    allow_origins=[
        "http://localhost:3000",  # Frontend –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ
        "https://comment-flow-flame.vercel.app"  # Production frontend
    ],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# –ë–∞–∑–æ–≤—ñ –º–∞—Ä—à—Ä—É—Ç–∏
@app.get("/")
async def root():
    return {"message": "CommentFlow API - Telegram Facebook Bot"}

@app.get("/health")
async def health_check():
    return {"status": "healthy", "service": "CommentFlow API"}

@app.get("/info")
async def api_info():
    return {
        "name": "CommentFlow API",
        "version": "1.0.0",
        "description": "API –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—ó –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤",
        "telegram_bot_configured": bool(os.getenv("TELEGRAM_BOT_TOKEN")),
        "database": "SQLite (development)"
    }

# –ü—Ä–æ—Å—Ç–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
@app.get("/auth/telegram")
async def telegram_auth_info():
    bot_token = os.getenv("TELEGRAM_BOT_TOKEN")
    if not bot_token:
        return {"error": "Telegram bot token not configured"}
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–∏–º–≤–æ–ª–æ–≤ —Ç–æ–∫–µ–Ω–∞ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    masked_token = bot_token[:10] + "..." if len(bot_token) > 10 else "configured"
    return {
        "telegram_bot_configured": True,
        "bot_token_preview": masked_token
    }

if __name__ == "__main__":
    import uvicorn
    
    print("–ó–∞–ø—É—Å–∫ CommentFlow API —Å–µ—Ä–≤–µ—Ä–∞...")
    uvicorn.run(
        "main:app",
        host="0.0.0.0",
        port=8000,
        reload=True,
        log_level="info"
    )